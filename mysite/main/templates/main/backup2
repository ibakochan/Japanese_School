class ProfilePageView(LoginRequiredMixin, View):
    # View for displaying details of a member.
    # Includes various things like profile pic, belt color, participation counts etc.

    model = CustomUser
    template_name = 'main/profile.html'




    def get(self, request, user_id):
        # Gets the current belt, gym etc for the UserPreferencesForm.
        # And gets the current participation counts for the user as initial input in the form.
        user = get_object_or_404(CustomUser, id=user_id)
        users = CustomUser.objects.all()

        CATEGORY_CHOICES = CustomUser.CATEGORY_CHOICES
        categories = [choice[0] for choice in CATEGORY_CHOICES]
        japanese_categories = [choice[1] for choice in CATEGORY_CHOICES]
        zipped_data = zip(categories, japanese_categories)

        user_preferences_form = UserPreferencesForm(instance=user)

        participation_counts = ParticipationCount.objects.filter(user=user)

        total_attendance = sum(pc.attendance for pc in participation_counts)



        participation_count_form = ParticipationCountForm(
            initial={
                'user': user,
                'attendance': total_attendance,
            }
        )

        return render(request, self.template_name, {'zipped_data': zipped_data, 'japanese_categories': japanese_categories, 'categories': categories, 'user': user, 'users': users, 'user_preferences_form': user_preferences_form, 'participation_count_form': participation_count_form})

    def get_context_data(self, **kwargs):
        # To get the user of the current profile page.
        context = super(ProfilePageView, self).get_context_data(**kwargs)
        user_id = self.kwargs['user_id']

        user_id = int(user_id)

        context['user_id'] = user_id
        return context

    def post(self, request, user_id):
        # For changing information about the user using the form.

        user = get_object_or_404(CustomUser, id=user_id)
        users = CustomUser.objects.all()

        user_preferences_form = UserPreferencesForm(request.POST, request.FILES or None, instance=user)

        if user_preferences_form.is_valid():
            user_preferences_form.save()


            return redirect('main:profile', user_id=user.id)
        else:
            return render(request, self.template_name, {
                'user': user,
                'users': users,
                'user_preferences_form': user_preferences_form,
            })










{% if request.user.is_superuser %}
<div>
    <label for="category-dropdown" class="card-title text-dark font-weight-bold">生徒カテゴリで表示:</label>
    <select id="category-dropdown" name="category">
        <option value="no-category" selected>カテゴリない生徒</option>
        {% for category, japanese_category in zipped_data %}
        <option value="{{ category }}">{{ japanese_category }}</option>
        {% endfor %}
        <option value="all">すべての生徒</option>
    </select>
</div>

<div id="user-list">
    {% for category in categories %}
    <div class="category-section" data-category="{{ category }}" style="display: none;">
        {% for u in users %}
        {% if category in u.categories %}
        <div class="card border border-dark mb-3">
            <div class="card-body d-flex align-items-center">
                <a href="{% url 'main:profile' user_id=u.id %}" style="text-decoration: none;">
                    <span class="mr-3">
                        <img style="width:64px;height:64px;margin-top: 8px; border:3px solid black;" {% if request.user.is_superuser %}src="{% url 'main:profile_picture' u.id %}"{% else %}src="{% static 'stacktry/32fb4d73a44991984a007252e99f93c7.jpg' %}"{% endif %}>
                    </span>
                    <span style="color: black; font-weight: bold; margin-right: 50px;">{{ u.username }}</span>
                </a>
                <a href="{% url 'main:late_absence' u.pk %}" class="btn btn-success border border-dark" style="margin-right: 50px;">遅刻と欠席歴</a>
                <div class="ml-auto">
                    <button class="btn btn-danger btn-rounded border border-dark" data-bs-toggle="modal" data-bs-target="#confirmDeleteAccountModal{{ u.id }}_{{ category }}">アカウント削除</button>
                    <!-- Confirmation Modal for Account Deletion -->
                    <div class="modal fade" id="confirmDeleteAccountModal{{ u.id }}_{{ category }}" tabindex="-1" aria-labelledby="confirmDeleteAccountModalLabel{{ u.id }}_{{ category }}" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="confirmDeleteAccountModalLabel{{ u.id }}_{{ category }}">削除確認</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    本当にこのアカウントを削除しますか
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">キャンセル</button>
                                    <form action="{% url 'main:delete_account' pk=u.id %}" method="POST">
                                        {% csrf_token %}
                                        <input type="submit" class="btn btn-danger" value="削除">
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}
        {% endfor %}
    </div>
    {% endfor %}

    <div class="category-section" data-category="no-category" style="display: block;">
        <h2 class="card-title text-dark font-weight-bold">カテゴリ選んでいない生徒</h2>
        {% for u in users %}
        {% if not u.categories %}
        <div class="card border border-dark mb-3">
            <div class="card-body d-flex align-items-center">
                <a href="{% url 'main:profile' user_id=u.id %}" style="text-decoration: none;">
                    <span class="mr-3">
                        <img style="width:64px;height:64px;margin-top: 8px; border:3px solid black;" {% if request.user.is_superuser %}src="{% url 'main:profile_picture' u.id %}"{% else %}src="{% static 'stacktry/32fb4d73a44991984a007252e99f93c7.jpg' %}"{% endif %}>
                    </span>
                    <span style="color: black; font-weight: bold; margin-right: 50px;">{{ u.username }}</span>
                </a>
                <a href="{% url 'main:late_absence' u.pk %}" class="btn btn-success border border-dark" style="margin-right: 50px;">遅刻と欠席歴</a>
                <div class="ml-auto">
                    <button class="btn btn-danger btn-rounded border border-dark" data-bs-toggle="modal" data-bs-target="#confirmDeleteAccountModal{{ u.id }}_no-category">アカウント削除</button>
                    <!-- Confirmation Modal for Account Deletion -->
                    <div class="modal fade" id="confirmDeleteAccountModal{{ u.id }}_no-category" tabindex="-1" aria-labelledby="confirmDeleteAccountModalLabel{{ u.id }}_no-category" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="confirmDeleteAccountModalLabel{{ u.id }}_no-category">削除確認</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    本当にこのアカウントを削除しますか
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">キャンセル</button>
                                    <form action="{% url 'main:delete_account' pk=u.id %}" method="POST">
                                        {% csrf_token %}
                                        <input type="submit" class="btn btn-danger" value="削除">
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}
        {% endfor %}
    </div>

    <div class="category-section" data-category="all" style="display: none;">
        <h2 class="card-title text-dark font-weight-bold">すべての生徒</h2>
        {% for u in users %}
        <div class="card border border-dark mb-3">
            <div class="card-body d-flex align-items-center">
                <a href="{% url 'main:profile' user_id=u.id %}" style="text-decoration: none;">
                    <span class="mr-3">
                        <img style="width:64px;height:64px;margin-top: 8px; border:3px solid black;" {% if request.user.is_superuser %}src="{% url 'main:profile_picture' u.id %}"{% else %}src="{% static 'stacktry/32fb4d73a44991984a007252e99f93c7.jpg' %}"{% endif %}>
                    </span>
                    <span style="color: black; font-weight: bold; margin-right: 50px;">{{ u.username }}</span>
                </a>
                <a href="{% url 'main:late_absence' u.pk %}" class="btn btn-success border border-dark" style="margin-right: 50px;">遅刻と欠席歴</a>
                <div class="ml-auto">
                    <button class="btn btn-danger btn-rounded border border-dark" data-bs-toggle="modal" data-bs-target="#confirmDeleteAccountModal{{ u.id }}_all">アカウント削除</button>
                    <!-- Confirmation Modal for Account Deletion -->
                    <div class="modal fade" id="confirmDeleteAccountModal{{ u.id }}_all" tabindex="-1" aria-labelledby="confirmDeleteAccountModalLabel{{ u.id }}_all" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="confirmDeleteAccountModalLabel{{ u.id }}_all">削除確認</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    本当にこのアカウントを削除しますか
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">キャンセル</button>
                                    <form action="{% url 'main:delete_account' pk=u.id %}" method="POST">
                                        {% csrf_token %}
                                        <input type="submit" class="btn btn-danger" value="削除">
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endfor %}
    </div>
</div>

{% endif %}

    </div>
  {% if request.user.is_superuser %}
  <p class="text-dark font-weight-bold">現在の生徒数: {% get_customuser_count %}</p>
  <h2 class="text-dark font-weight-bold">アカウント制限を設定する</h2>
  <p class="text-dark font-weight-bold">アカウント制限：{% user_limit %}　まで</p>
  <form method="post" action="{% url 'main:set_user_limit' %}">
    {% csrf_token %}
    <label class="text-dark font-weight-bold" for="user_limit">アカウント制限:</label>
    <input type="number" id="user_limit" name="user_limit" required>
    <button class="btn btn-success border border-dark" type="submit">制限を設定する</button>
  </form>
  {% endif %}








{% block content %}

{% load static %}


<!-- CSS only -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
    <!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8" crossorigin="anonymous" defer></script>

        <!--
    This website uses an MIT-licensed template.
    License information is available in the "license/license.text" file.
    -->


<link href="{% static 'accounts/log_sign.css' %}" rel="stylesheet">
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
<meta name="viewport" content="width=device-width, initial-scale=1">


<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h2 class="text-center mb-4">Sign up</h2>
                    <form method="post">
                        {% csrf_token %}
                        {{ signup_form.as_p }}

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg">Sign up</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<p><a href="{% url 'main:schedules' %}" class="btn btn-primary border border-dark">Go back to Iwade Schedule</a></p>


{% endblock %}



from django.contrib.auth import login
from django.shortcuts import render, redirect
from .forms import CustomUserCreationForm
from django.contrib import messages


def signup(request):
    # Function for signing up using a custom form that uses djangos built in auth system.
    # It logs you in automatically upon success and redirects you to the Kix school schedule.
    if request.method == 'POST':
        form = CustomUserCreationForm(request.POST)
        if form.is_valid():
            user = form.save()
            return redirect('main:profile', user_id=user.id)
    else:
        form = CustomUserCreationForm()
    if form.errors:
        messages.error(request, 'Username or Password are invalid. Please try again.')
    return render(request, 'accounts/signup.html', {'signup_form': form})
